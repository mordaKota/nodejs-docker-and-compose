version: '3.9'

services:
  database:
    container_name: kupipodaridai-db
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=${DATABASE_NAME}
      - POSTGRES_USER=${DATABASE_USERNAME}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
    env_file:
      - ./backend/.env
    volumes:
      - 'pg_data:/var/lib/postgresql/data'
    networks:
      - internal
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "${DATABASE_USERNAME}" ]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    container_name: kupipodaridai_backend
    build:
      context: ./backend
      dockerfile: Dockerfile
    image: kupipodaridai-backend:latest
    restart: always
    env_file:
      - backend/.env
    ports:
      - "4000:3000"
#    volumes:
#      - .:/app
#    working_dir: /app
#    command: sh -c "npm run start:dev"
    networks:
      - internal
    depends_on:
      database:
        condition: service_healthy

  frontend:
    container_name: kupipodaridai-frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    image: kupipodaridai-frontend:latest
    restart: always
    ports:
      - "8081:80"
    networks:
      - internal
    depends_on:
      - backend


volumes:
  pg_data:

networks:
  internal:
    driver: bridge